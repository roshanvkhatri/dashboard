var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var AngularSvgIconModule_1;
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SVG_ICON_REGISTRY_PROVIDER } from './svg-icon-registry.service';
import { SvgIconComponent } from './svg-icon.component';
import { SvgHttpLoader, SvgLoader } from './svg-loader';
let AngularSvgIconModule = AngularSvgIconModule_1 = class AngularSvgIconModule {
    static forRoot(config = {}) {
        return {
            ngModule: AngularSvgIconModule_1,
            providers: [
                SVG_ICON_REGISTRY_PROVIDER,
                config.loader || { provide: SvgLoader, useClass: SvgHttpLoader }
            ]
        };
    }
};
AngularSvgIconModule = AngularSvgIconModule_1 = __decorate([
    NgModule({
        imports: [
            CommonModule,
        ],
        declarations: [
            SvgIconComponent
        ],
        exports: [SvgIconComponent]
    })
], AngularSvgIconModule);
export { AngularSvgIconModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1zdmctaWNvbi5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXN2Zy1pY29uLyIsInNvdXJjZXMiOlsibGliL2FuZ3VsYXItc3ZnLWljb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxPQUFPLEVBQXVCLFFBQVEsRUFBWSxNQUFNLGVBQWUsQ0FBQztBQUN4RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDekUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxTQUFTLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFleEQsSUFBYSxvQkFBb0IsNEJBQWpDLE1BQWEsb0JBQW9CO0lBRWhDLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBK0IsRUFBRTtRQUMvQyxPQUFPO1lBQ04sUUFBUSxFQUFFLHNCQUFvQjtZQUM5QixTQUFTLEVBQUU7Z0JBQ1YsMEJBQTBCO2dCQUMxQixNQUFNLENBQUMsTUFBTSxJQUFJLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsYUFBYSxFQUFFO2FBQ2hFO1NBQ0QsQ0FBQztJQUNILENBQUM7Q0FDRCxDQUFBO0FBWFksb0JBQW9CO0lBVGhDLFFBQVEsQ0FBQztRQUNULE9BQU8sRUFBRTtZQUNSLFlBQVk7U0FDWjtRQUNELFlBQVksRUFBRTtZQUNiLGdCQUFnQjtTQUNoQjtRQUNELE9BQU8sRUFBRSxDQUFFLGdCQUFnQixDQUFFO0tBQzdCLENBQUM7R0FDVyxvQkFBb0IsQ0FXaEM7U0FYWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSwgUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IFNWR19JQ09OX1JFR0lTVFJZX1BST1ZJREVSIH0gZnJvbSAnLi9zdmctaWNvbi1yZWdpc3RyeS5zZXJ2aWNlJztcbmltcG9ydCB7IFN2Z0ljb25Db21wb25lbnQgfSBmcm9tICcuL3N2Zy1pY29uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdmdIdHRwTG9hZGVyLCBTdmdMb2FkZXIgfSBmcm9tICcuL3N2Zy1sb2FkZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIEFuZ3VsYXJTdmdJY29uQ29uZmlnIHtcblx0bG9hZGVyPzogUHJvdmlkZXI7XG59XG5cbkBOZ01vZHVsZSh7XG5cdGltcG9ydHM6IFtcblx0XHRDb21tb25Nb2R1bGUsXG5cdF0sXG5cdGRlY2xhcmF0aW9uczogW1xuXHRcdFN2Z0ljb25Db21wb25lbnRcblx0XSxcblx0ZXhwb3J0czogWyBTdmdJY29uQ29tcG9uZW50IF1cbn0pXG5leHBvcnQgY2xhc3MgQW5ndWxhclN2Z0ljb25Nb2R1bGUge1xuXG5cdHN0YXRpYyBmb3JSb290KGNvbmZpZzogQW5ndWxhclN2Z0ljb25Db25maWcgPSB7fSk6IE1vZHVsZVdpdGhQcm92aWRlcnM8QW5ndWxhclN2Z0ljb25Nb2R1bGU+IHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0bmdNb2R1bGU6IEFuZ3VsYXJTdmdJY29uTW9kdWxlLFxuXHRcdFx0cHJvdmlkZXJzOiBbXG5cdFx0XHRcdFNWR19JQ09OX1JFR0lTVFJZX1BST1ZJREVSLFxuXHRcdFx0XHRjb25maWcubG9hZGVyIHx8IHsgcHJvdmlkZTogU3ZnTG9hZGVyLCB1c2VDbGFzczogU3ZnSHR0cExvYWRlciB9XG5cdFx0XHRdXG5cdFx0fTtcblx0fVxufVxuIl19